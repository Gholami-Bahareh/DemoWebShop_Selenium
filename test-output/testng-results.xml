<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="4" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-10-27T23:08:20 CET" name="Default suite" finished-at="2025-10-27T23:08:48 CET" duration-ms="28308">
    <groups>
      <group name="woman">
        <method signature="RegisterTest.validsuccessfulFemaleRegister()[pri:0, instance:tests.RegisterTest@131ef10]" name="validsuccessfulFemaleRegister" class="tests.RegisterTest"/>
      </group> <!-- woman -->
      <group name="regression">
        <method signature="RegisterTest.registerWithDuplicateEmail()[pri:0, instance:tests.RegisterTest@131ef10]" name="registerWithDuplicateEmail" class="tests.RegisterTest"/>
        <method signature="RegisterTest.testEmptyRequiredFields()[pri:0, instance:tests.RegisterTest@131ef10]" name="testEmptyRequiredFields" class="tests.RegisterTest"/>
        <method signature="RegisterTest.validsuccessfulFemaleRegister()[pri:0, instance:tests.RegisterTest@131ef10]" name="validsuccessfulFemaleRegister" class="tests.RegisterTest"/>
        <method signature="RegisterTest.validsuccessfulMaleRegister()[pri:0, instance:tests.RegisterTest@131ef10]" name="validsuccessfulMaleRegister" class="tests.RegisterTest"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="RegisterTest.validsuccessfulMaleRegister()[pri:0, instance:tests.RegisterTest@131ef10]" name="validsuccessfulMaleRegister" class="tests.RegisterTest"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2025-10-27T23:08:20 CET" name="Default test" finished-at="2025-10-27T23:08:48 CET" duration-ms="28308">
      <class name="tests.RegisterTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.RegisterTest@131ef10]" started-at="2025-10-27T23:08:20 CET" name="setup" finished-at="2025-10-27T23:08:29 CET" duration-ms="8640" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="generateEmail()[pri:0, instance:tests.RegisterTest@131ef10]" started-at="2025-10-27T23:08:29 CET" name="generateEmail" finished-at="2025-10-27T23:08:31 CET" duration-ms="2101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateEmail -->
        <test-method signature="registerWithDuplicateEmail()[pri:0, instance:tests.RegisterTest@131ef10]" started-at="2025-10-27T23:08:31 CET" name="registerWithDuplicateEmail" finished-at="2025-10-27T23:08:38 CET" duration-ms="7307" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithDuplicateEmail -->
        <test-method is-config="true" signature="generateEmail()[pri:0, instance:tests.RegisterTest@131ef10]" started-at="2025-10-27T23:08:38 CET" name="generateEmail" finished-at="2025-10-27T23:08:39 CET" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateEmail -->
        <test-method signature="testEmptyRequiredFields()[pri:0, instance:tests.RegisterTest@131ef10]" started-at="2025-10-27T23:08:39 CET" name="testEmptyRequiredFields" finished-at="2025-10-27T23:08:40 CET" duration-ms="879" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyRequiredFields -->
        <test-method is-config="true" signature="generateEmail()[pri:0, instance:tests.RegisterTest@131ef10]" started-at="2025-10-27T23:08:40 CET" name="generateEmail" finished-at="2025-10-27T23:08:40 CET" duration-ms="459" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateEmail -->
        <test-method signature="validsuccessfulFemaleRegister()[pri:0, instance:tests.RegisterTest@131ef10]" started-at="2025-10-27T23:08:40 CET" name="validsuccessfulFemaleRegister" finished-at="2025-10-27T23:08:44 CET" duration-ms="3408" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validsuccessfulFemaleRegister -->
        <test-method is-config="true" signature="generateEmail()[pri:0, instance:tests.RegisterTest@131ef10]" started-at="2025-10-27T23:08:44 CET" name="generateEmail" finished-at="2025-10-27T23:08:44 CET" duration-ms="570" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateEmail -->
        <test-method signature="validsuccessfulMaleRegister()[pri:0, instance:tests.RegisterTest@131ef10]" started-at="2025-10-27T23:08:44 CET" name="validsuccessfulMaleRegister" finished-at="2025-10-27T23:08:48 CET" duration-ms="3501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validsuccessfulMaleRegister -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.RegisterTest@131ef10]" started-at="2025-10-27T23:08:48 CET" name="teardown" finished-at="2025-10-27T23:08:48 CET" duration-ms="588" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- tests.RegisterTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
